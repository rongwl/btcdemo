TESTS = unit_test/test_util \
        unit_test/test_crypto \
        unit_test/test_chain \
        unit_test/test_network \
        unit_test/test_fullnode
bin_PROGRAMS += unit_test/test_util \
                unit_test/test_crypto \
                unit_test/test_chain \
                unit_test/test_network \
                unit_test/test_fullnode 
#TEST_SRCDIR = unit_test
#TEST_BINARY = unit_test/test_btclite


UNIT_TEST_NETWORK_INCLUDES = -I$(srcdir)/unit_test/network/include
UNIT_TEST_UTIL_INCLUDES = -I$(srcdir)/unit_test/utility/include

# test_fullnode binary #
unit_test_test_fullnode_SOURCES = unit_test/fullnode/src/test_fullnode.cpp \
                                  unit_test/fullnode/src/config_tests.cpp

unit_test_test_fullnode_CPPFLAGS = $(AM_CPPFLAGS) \
                                   $(GTEST_CFLAGS) \
                                   $(GLOG_CFLAGS) \
                                   $(BOTAN_CFLAGS) \
                                   $(BTCLITE_INCLUDES)
unit_test_test_fullnode_LDADD = \
                                $(LIBBTCLITE_FULLNODE) \
                                $(LIBBTCLITE_NETWORK) \
                                $(LIBBTCLITE_UTIL)
unit_test_test_fullnode_LDADD += $(GTEST_LIBS) \
                                 $(GLOG_LIBS) \
                                 $(PTHREAD_LIBS) \
                                 $(STDCPP_FILESYSTEM_LIBS) 


# test_network binary #
unit_test_test_network_SOURCES = unit_test/network/src/test_network.cpp \
                                 unit_test/network/src/network_address_tests.cpp \
                                 unit_test/network/src/params_tests.cpp \
                                 unit_test/network/src/netbase_tests.cpp \
                                 unit_test/network/src/net_tests.cpp \
                                 unit_test/network/src/bandb_tests.cpp \
                                 unit_test/network/src/peers_tests.cpp \
                                 unit_test/network/src/protocol/message_tests.cpp \
                                 unit_test/network/src/protocol/address_tests.cpp \
                                 unit_test/network/src/protocol/inventory_vector_tests.cpp \
                                 unit_test/network/src/protocol/inventory_tests.cpp \
                                 unit_test/network/src/protocol/ping_tests.cpp \
                                 unit_test/network/src/protocol/reject_tests.cpp \
                                 unit_test/network/src/protocol/version_tests.cpp \
                                 unit_test/network/src/msg_process_tests.cpp \
                                 unit_test/network/src/block_sync_tests.cpp \
                                 unit_test/network/src/node_tests.cpp \
                                 unit_test/network/src/acceptor_tests.cpp \
                                 unit_test/network/src/connector_tests.cpp \
                                 unit_test/network/src/p2p_tests.cpp \
                                 unit_test/network/src/socket_tests.cpp \
                                 unit_test/network/include/block_sync_tests.h \
                                 unit_test/network/include/msg_process.h \
                                 unit_test/network/include/net_tests.h \
                                 unit_test/network/include/node_tests.h \
                                 unit_test/network/include/protocol/message_tests.h \
                                 unit_test/network/include/protocol/address_tests.h \
                                 unit_test/network/include/protocol/inventory_vector_tests.h \
                                 unit_test/network/include/protocol/version_tests.h \
                                 unit_test/network/include/protocol/ping_tests.h \
                                 unit_test/network/include/protocol/reject_tests.h \
                                 unit_test/network/include/socket_tests.h

unit_test_test_network_CPPFLAGS = $(AM_CPPFLAGS) \
                                  $(GTEST_CFLAGS) \
                                  $(GMOCK_CFLAGS) \
                                  $(GLOG_CFLAGS) \
                                  $(BOTAN_CFLAGS) \
                                  $(UNIT_TEST_NETWORK_INCLUDES) \
                                  $(BTCLITE_INCLUDES)
unit_test_test_network_LDADD = $(LIBBTCLITE_FULLNODE) \
                               $(LIBBTCLITE_NETWORK) \
                               $(LIBBTCLITE_CHAIN) \
                               $(LIBBTCLITE_CRYPTO) \
                               $(LIBBTCLITE_UTIL)
unit_test_test_network_LDADD += $(GTEST_LIBS) \
                                $(GMOCK_LIBS) \
                                $(PTHREAD_LIBS) \
                                $(PROTOBUF_LIBS) \
                                $(BOTAN_LIBS) \
                                $(GLOG_LIBS) \
                                $(EVENT_LIBS) \
                                $(EVENT_PTHREADS_LIBS) \
                                $(STDCPP_FILESYSTEM_LIBS)


# test_crypto binary #
unit_test_test_crypto_SOURCES = unit_test/crypto/src/test_crypto.cpp \
                                unit_test/crypto/src/hash_tests.cpp

unit_test_test_crypto_CPPFLAGS = $(AM_CPPFLAGS) \
                                 $(GTEST_CFLAGS) \
                                 $(BOTAN_CFLAGS) \
                                 $(BTCLITE_INCLUDES)
unit_test_test_crypto_LDADD = $(LIBBTCLITE_CRYPTO) \
                              $(LIBBTCLITE_CHAIN) \
                              $(LIBBTCLITE_UTIL)
unit_test_test_crypto_LDADD += $(GTEST_LIBS) \
                               $(PTHREAD_LIBS) \
                               $(BOTAN_LIBS)


# test_chain binary #
unit_test_test_chain_SOURCES = unit_test/chain/src/test_chain.cpp \
                               unit_test/chain/src/params_tests.cpp

unit_test_test_chain_CPPFLAGS = $(AM_CPPFLAGS) \
                                 $(GTEST_CFLAGS) \
                                 $(BOTAN_CFLAGS) \
                                 $(BTCLITE_INCLUDES)
unit_test_test_chain_LDADD = $(LIBBTCLITE_CHAIN) \
                             $(LIBBTCLITE_UTIL)
unit_test_test_chain_LDADD += $(GTEST_LIBS) \
                              $(BOTAN_LIBS)


# test_util binary #
unit_test_test_util_SOURCES = unit_test/utility/src/test_util.cpp \
                              unit_test/utility/src/circular_buffer_tests.cpp \
                              unit_test/utility/src/string_encoding_tests.cpp \
                              unit_test/utility/src/random_tests.cpp \
                              unit_test/utility/src/stream_tests.cpp \
                              unit_test/utility/src/serialize_tests.cpp \
                              unit_test/utility/src/util_tests.cpp \
                              unit_test/utility/src/util_tests.h

unit_test_test_util_CPPFLAGS = $(AM_CPPFLAGS) \
                               $(GTEST_CFLAGS) \
                               $(BOTAN_CFLAGS) \
                               $(UNIT_TEST_UTIL_INCLUDES) \
                               $(BTCLITE_INCLUDES)
unit_test_test_util_LDADD = $(LIBBTCLITE_UTIL)
unit_test_test_util_LDADD += $(GTEST_LIBS) \
                             $(GLOG_LIBS) \
                             $(PTHREAD_LIBS) \
                             $(BOTAN_LIBS) \
                             $(STDCPP_FILESYSTEM_LIBS)
